Welcome to the Call Number Browser!

This document aims to help guide an end-user in the daily or regular use of
this tool. Please feel free to reach out if you have any questions.

TABLE OF CONTENTS:
    1. PURPOSE
    3. CONFIGURATION FILE
    7. CREDITS AND CLOSING

PURPOSE:
This program is intended as a way to place new call numbers in an existing
database of materials in order to better illustrate where to shelve new items
to the library. The tool is case- and whitespace-sensitive and may result in
different outputs depending on what is typed in due to the lack of an
associated shelvingOrder for the item.

INPUT CALL NUMBER:
Input call number is case- and whitespcae-sensitive and WILL result in
different outputs depending on the input. For example, "TX324.5 M66 2025" and
"TX 324.5 M66 2025" (a space between the class letters and class numbers) will
result in different outputs.

CONFIGURATION FILE:
The tool requires a configuration file stored in the Javascript Object Notation
format (JSON). The default name of the file is "config.json", stored in the
same working directory as the tool. This path can be changed with the relevant
field. At minimum, the JSON must have the following keys and values:
    - "okapi_url" : The URL to the OKAPI gateway to the FOLIO project, will
        most likely be "https://okapi-mobius.folio.ebsco.com".
    - "tenant" : The tenant ID for the institution. You can find your FOLIO
        tenant by going to: "Apps → Settings → Software versions". Under 
        "Okapi services" find the subheading "Okapi", then the entry
        "For tenant...".
    - "username" : The individual user of the institution. It is recommended
        that you create an account with read-only permissions for using the
        API. For the purposes of this app, the User account must have at least
        the permission "Requests: View".
    - "password" : The password for the associated account.
Please note: The generator is case-sensitive. Only include what is in between
the quotation marks part of the labels and not the marks themselves. Please
visit the repository for an editable template config.json file.

OUTPUT AND FORMATTING:
After extracting, sorting, and trimming the items from FolioClient, a slice
centered around the inputted call number is outputted to the window of the
tool, showcasing a possible place in the sorted shelvingOrder of the system.

CREDITS AND CLOSING:
Developed for use and further development on Windows using Python 3.12+.

Developed by Pickler Memorial Library, Truman State University.

More information can be found by reading the user and developer manuals
associated with the release.

Text originally published 2025-02-20, v0.0.0.
Last updated 2025-02-20, v0.0.0.
Raw ver. info. (for tracking development): Z2l0aHViQGphcS1sYWduaXJhYw==