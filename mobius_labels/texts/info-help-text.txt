Welcome to Mobius Label Generator!

This document aims to help guide an end-user in the daily or regular use of
this tool. Please feel free to reach out if you have any questions.

TABLE OF CONTENTS:
    1. PURPOSE
    2. TEMPLATE PDF
    3. CONFIGURATION FILE
    4. OFFSETS
    5. TEMPORARY WORKING SUB-DIRECTORY
    6. OUTPUT LABEL SHEET
    7. CREDITS AND CLOSING

PURPOSE:
This program is intended as an open source generator to create labels to help 
facilitate interlibrary loans within the MOBIUS Linking Libraries Consortium.
The tool takes a template PDF given by the user (created using an external
tool--such LibreOffice Writer--with standard 8.5"x11" landscape letter
dimensions) and generates a label sheet PDF for use and printing on a standard
8.5"x11" portrait letter 4x2 sticker sheet.

TEMPLATE PDF:
The tool requires a user-inputted PDF (relative or absolute) path. The default
name of the file is "mobius_label.pdf", stored in the same working directory
as the tool. This path can be changed with the relevant field. At minimum,
the PDF must have the following fields (labeled using an external tool):
    - "Title" : The title of the piece of medium, FOLIO includes the author
        in this field on occasion.
    - "CallNumber" : The call number of the item.
    - "SendTo" : The intended destination of the item.
    - "Patron" : If the request comes from the Home Libary listed in the
        config.json file (see CONFIGURATION FILE), the requester's last and
        first name are displayed. Otherwise, the DcbSystem barcode is printed.
    - "Location" : The shelving location of the requested item.
Please note: The generator is case-sensitive. Only include what is in between
the quotation marks part of the labels and not the marks themselves. Please
visit the repository for an example mobius_label.pdf as well as an editable 
template DOCX.

CONFIGURATION FILE:
The tool requires a configuration file stored in the Javascript Object Notation
format (JSON). The default name of the file is "config.json", stored in the
same working directory as the tool. This path can be changed with the relevant
field. At minimum, the JSON must have the following keys and values:
    - "okapi_url" : The URL to the OKAPI gateway to the FOLIO project, will
        most likely be "https://okapi-mobius.folio.ebsco.com".
    - "tenant" : The tenant ID for the institution. You can find your FOLIO
        tenant by going to: "Apps → Settings → Software versions". Under 
        "Okapi services" find the subheading "Okapi", then the entry
        "For tenant...".
    - "username" : The individual user of the institution. It is recommended
        that you create an account with read-only permissions for using the
        API. For the purposes of this app, the User account must have at least
        the permission "Requests: View".
    - "password" : The password for the associated account.
Please note: The generator is case-sensitive. Only include what is in between
the quotation marks part of the labels and not the marks themselves. Please
visit the repository for an editable template config.json file.

OFFSETS:
The tool is capable on printing a full sheet of 8 labels as well as printing on
used sheets (i.e. sheets that do not have a full 8 stickers) by using the
"offset" field. A small graphic appears on the main window to aid in 
determining the offset that will be inputted into the program, where X denotes
the labels that will be printed based on a vertical orientation (with blanks
denoting no label will be printed there).

TEMPORARY WORKING SUB-DIRECTORY:
You may see a directory/folder appear and disappear during code execution and
label generation. This is intended behavior, and is a requirement for
successful code execution. This directory is the location where the tool
conducts its operations in order to prevent accessing files outside the scope
of the program. You must have the extra storage space in order for successful
program execution. Do NOT interact or attempt to delete this directory during
runtime execution, as this may lead to erroneous behavior.

OUTPUT LABEL SHEET:
After clicking "Enter", wait until a green status message appears on the main
window. After a successful generation, you will find a label sheet named
"YYYYMMDD_HHMMSS_label_sheet.pdf" in an output directory named
"MOBIUS_LABEL_OUTPUT_JAQ". The file's prefix is generated using a modified
ISO 8601 Basic format denoting the time of creation. If the output
sub-directory does not exist in the working directory, one will be created; in
other words, you do not need to create the output directory manually.

CREDITS AND CLOSING:
Developed for use and further development on Windows using Python 3.12+.

Developed by Pickler Memorial Library, Truman State University.

More information can be found by reading the user and developer manuals
associated with the release.

Text originally published 2024-10-04, v1.1.0.
Last updated 2024-10-25, v2.2.1.
Raw ver. info. (for tracking development): Z2l0aHViQGphcS1sYWduaXJhYw==